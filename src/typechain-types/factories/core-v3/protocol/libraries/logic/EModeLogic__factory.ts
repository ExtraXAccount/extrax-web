/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  EModeLogic,
  EModeLogicInterface,
} from "../../../../../core-v3/protocol/libraries/logic/EModeLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "categoryId",
        type: "uint8",
      },
    ],
    name: "UserEModeSet",
    type: "event",
  },
] as const;

const _bytecode =
  "0x61144361003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c80635d5dc3131461003a575b600080fd5b81801561004657600080fd5b5061005a61005536600461119c565b61005c565b005b60408051602081018252835481528251918301516100809289928992899290610145565b336000908152602084905260409081902080549183015160ff9081167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416179091551680156100fe576100fb87878786604051806020016040529081600082015481525050338760400151886000015189602001516102dc565b50505b604080830151905160ff909116815233907fd728da875fc88944cbf17638bcbe4af0eedaef63becd1d1c57cc097eb4608d849060200160405180910390a250505050505050565b60ff81161580610170575060ff811660009081526020859052604090205462010000900461ffff1615155b6040518060400160405280600281526020017f3538000000000000000000000000000000000000000000000000000000000000815250906101e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de91906112b1565b60405180910390fd5b508251156102d45760ff8116156102d45760005b828110156102d25761020d84826103d7565b156102ca576000818152602087815260408083205473ffffffffffffffffffffffffffffffffffffffff168352898252918290208251918201909252905480825260ff8481169160a81c16146040518060400160405280600281526020017f3538000000000000000000000000000000000000000000000000000000000000815250906102c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de91906112b1565b50505b6001016101fb565b505b505050505050565b6000806000806103438c8c8c6040518060a001604052808e81526020018b81526020018d73ffffffffffffffffffffffffffffffffffffffff1681526020018a73ffffffffffffffffffffffffffffffffffffffff1681526020018c60ff16815250610460565b9550955050505050670de0b6b3a76400008210156040518060400160405280600281526020017f3335000000000000000000000000000000000000000000000000000000000000815250906103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de91906112b1565b50909b909a5098505050505050505050565b60408051808201909152600281527f3734000000000000000000000000000000000000000000000000000000000000602082015260009060808310610449576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de91906112b1565b50508151600182811b9190911c1615155b92915050565b6000806000806000806104768760000151511590565b156104b25750600094508493508392508291507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050816109c3565b61056160405180610260016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000151581525090565b608088015160ff16156105a657608088015160ff16600090815260208a905260409020606089015161059391906109d0565b6101808401526101c08301526101a08201525b87602001518160c0015110156108c55760c081015188516105c691610aaf565b6105da5760c08101805160010190526105a6565b60c0810151600090815260208b9052604090205473ffffffffffffffffffffffffffffffffffffffff1661020082018190526106205760c08101805160010190526105a6565b61020081015173ffffffffffffffffffffffffffffffffffffffff16600090815260208c8152604091829020825180830190935280549283905260ff60a884901c81166101e0860152603084901c166060850181905261ffff601085901c811660a08701529093166080850152600a9290920a90830152610180820151158015906106b65750816101e00151896080015160ff16145b61075a5760608901516102008301516040517fb3596f0700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015291169063b3596f0790602401602060405180830381865afa158015610731573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610755919061131e565b610761565b8161018001515b825260a082015115801590610781575060c0820151895161078191610b34565b156108715761079e89604001518284600001518560200151610bb8565b60408301819052610100830180516107b7908390611366565b90525060808901516101e08301516107d29160ff1690610c97565b1515610240830152608082015115610828578161024001516107f85781608001516107ff565b816101a001515b826040015161080e9190611379565b82610140018181516108209190611366565b905250610831565b60016102208301525b816102400151610845578160a0015161084c565b816101c001515b826040015161085b9190611379565b826101600181815161086d9190611366565b9052505b60c08201518951610881916103d7565b156108b45761089e89604001518284600001518560200151610cae565b82610120018181516108b09190611366565b9052505b5060c08101805160010190526105a6565b8061010001516000036108d95760006108f4565b806101000151816101400151816108f2576108f2611390565b045b61014082015261010081015160000361090e576000610929565b8061010001518161016001518161092757610927611390565b045b6101608201526101208101511561096b57610966816101200151610960836101600151846101000151610e2e90919063ffffffff16565b90610e71565b61098d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b60e0820181905261010082015161012083015161014084015161016085015161022090950151929a509098509650919450925090505b9499939850945094509450565b81546000908190819081906601000000000000900473ffffffffffffffffffffffffffffffffffffffff168015610a94576040517fb3596f0700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff828116600483015287169063b3596f0790602401602060405180830381865afa158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a91919061131e565b91505b50945461ffff80821697620100009092041695945092505050565b60408051808201909152600281527f3734000000000000000000000000000000000000000000000000000000000000602082015260009060808310610b21576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de91906112b1565b5050905160019190911b1c600316151590565b60408051808201909152600281527f3734000000000000000000000000000000000000000000000000000000000000602082015260009060808310610ba6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101de91906112b1565b50509051600191821b82011c16151590565b600080610bc485610ea8565b6004868101546040517f1da24f3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a8116938201939093529293506000928792610c70928692911690631da24f3e90602401602060405180830381865afa158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6a919061131e565b90610f2b565b610c7a9190611379565b9050838181610c8b57610c8b611390565b04979650505050505050565b60008215801590610ca757508282145b9392505050565b60068301546040517f1da24f3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86811660048301526000928392911690631da24f3e90602401602060405180830381865afa158015610d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d48919061131e565b90508015610d6657610d63610d5c86610f82565b8290610f2b565b90505b60058501546040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152909116906370a0823190602401602060405180830381865afa158015610dd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dfc919061131e565b610e069082611366565b9050610e128185611379565b9050828181610e2357610e23611390565b049695505050505050565b600081157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec7783900484111517610e6357600080fd5b506127109102611388010490565b60008115670de0b6b3a764000060028404190484111715610e9157600080fd5b50670de0b6b3a76400009190910260028204010490565b6003810154600090700100000000000000000000000000000000900464ffffffffff16428103610eed575050600101546fffffffffffffffffffffffffffffffff1690565b6001830154610ca7906fffffffffffffffffffffffffffffffff80821691610c6a917001000000000000000000000000000000009091041684611005565b600081157ffffffffffffffffffffffffffffffffffffffffffe6268e1b017bfe18bffffff83900484111517610f6057600080fd5b506b033b2e3c9fd0803ce800000091026b019d971e4fe8401e74000000010490565b6003810154600090700100000000000000000000000000000000900464ffffffffff16428103610fc7575050600201546fffffffffffffffffffffffffffffffff1690565b6002830154610ca7906fffffffffffffffffffffffffffffffff80821691610c6a91700100000000000000000000000000000000909104168461104a565b60008061101964ffffffffff8416426113bf565b6110239085611379565b6301e1338090049050611042816b033b2e3c9fd0803ce8000000611366565b949350505050565b6000610ca783834260008061106664ffffffffff8516846113bf565b905080600003611085576b033b2e3c9fd0803ce8000000915050610ca7565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810160008080600285116110bb5760006110c0565b600285035b925066038882915c40006110d48a80610f2b565b816110e1576110e1611390565b0491506301e133806110f3838b610f2b565b8161110057611100611390565b0490506000826111108688611379565b61111a9190611379565b6002900490506000828561112e888a611379565b6111389190611379565b6111429190611379565b60069004905080826301e133806111598a8f611379565b61116391906113d2565b611179906b033b2e3c9fd0803ce8000000611366565b6111839190611366565b61118d9190611366565b9b9a5050505050505050505050565b6000806000806000808688036101008112156111b757600080fd5b873596506020880135955060408801359450606088013593506080880135925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff608201121561120757600080fd5b506040516060810181811067ffffffffffffffff82111715611252577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405260a0880135815260c088013573ffffffffffffffffffffffffffffffffffffffff8116811461128357600080fd5b602082015260e088013560ff8116811461129c57600080fd5b80604083015250809150509295509295509295565b60006020808352835180602085015260005b818110156112df578581018301518582016040015282016112c3565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561133057600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561045a5761045a611337565b808202811582820484141761045a5761045a611337565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b8181038181111561045a5761045a611337565b600082611408577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea2646970667358221220dd668aee4c5bf26aba1242e019b37452a112e2ca57536730b56ca733f9cba29e64736f6c63430008180033";

type EModeLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EModeLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EModeLogic__factory extends ContractFactory {
  constructor(...args: EModeLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EModeLogic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EModeLogic__factory {
    return super.connect(runner) as EModeLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EModeLogicInterface {
    return new Interface(_abi) as EModeLogicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EModeLogic {
    return new Contract(address, _abi, runner) as unknown as EModeLogic;
  }
}
