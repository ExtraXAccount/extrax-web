/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockFlashLoanReceiver,
  MockFlashLoanReceiverInterface,
} from "../../../../core-v3/mocks/flashloan/MockFlashLoanReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_premiums",
        type: "uint256[]",
      },
    ],
    name: "ExecutedWithFail",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "_assets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_premiums",
        type: "uint256[]",
      },
    ],
    name: "ExecutedWithSuccess",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "premiums",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAmountToApprove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToApprove",
        type: "uint256",
      },
    ],
    name: "setAmountToApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "fail",
        type: "bool",
      },
    ],
    name: "setFailExecutionTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "setSimulateEOA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "simulateEOA",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610bad380380610bad83398101604081905261002f916100d8565b80806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac91906100d8565b6001600160a01b031660a052506100fc9050565b6001600160a01b03811681146100d557600080fd5b50565b6000602082840312156100ea57600080fd5b81516100f5816100c0565b9392505050565b60805160a051610a866101276000396000818161014c01526104eb0152600060920152610a866000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637535d2461161005b5780637535d24614610147578063920f5c841461016e578063bf443f8514610181578063e9a6a25b1461019457600080fd5b80630542975c1461008d578063388f70f1146100de5780634444f3311461011f5780635e76bba314610136575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61011d6100ec3660046105cd565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b60025460ff165b60405190151581526020016100d5565b6001546040519081526020016100d5565b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b61012661017c3660046107b9565b6101d3565b61011d61018f3660046108d3565b600155565b61011d6101a23660046105cd565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6000805460ff1615610227577f9972b212e52913783072b960dd41527ae8b6e609d017b64039758dda0ce4127886868660405161021293929190610928565b60405180910390a15060025460ff16156105b3565b60005b8651811015610573576000878281518110610247576102476109ab565b60200260200101519050878281518110610263576102636109ab565b60209081029190910101516040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd91906109da565b87838151811061030f5761030f6109ab565b60200260200101511115610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f496e76616c69642062616c616e636520666f722074686520636f6e7472616374604482015260640160405180910390fd5b60006001546000036103d2578683815181106103a1576103a16109ab565b60200260200101518884815181106103bb576103bb6109ab565b60200260200101516103cd91906109f3565b6103d6565b6001545b90508173ffffffffffffffffffffffffffffffffffffffff166340c10f1930898681518110610407576104076109ab565b60200260200101516040518363ffffffff1660e01b815260040161044d92919073ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af115801561046c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104909190610a33565b508883815181106104a3576104a36109ab565b60209081029190910101516040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018490529091169063095ea7b3906044016020604051808303816000875af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190610a33565b50505060010161022a565b507fbd6b6bfac59612765a81cc4fdee74ab4859671fa14a562056f9eea438735a78a8686866040516105a793929190610928565b60405180910390a15060015b95945050505050565b80151581146105ca57600080fd5b50565b6000602082840312156105df57600080fd5b81356105ea816105bc565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610667576106676105f1565b604052919050565b600067ffffffffffffffff821115610689576106896105f1565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff811681146106b757600080fd5b919050565b600082601f8301126106cd57600080fd5b813560206106e26106dd8361066f565b610620565b8083825260208201915060208460051b87010193508684111561070457600080fd5b602086015b848110156107205780358352918301918301610709565b509695505050505050565b600082601f83011261073c57600080fd5b813567ffffffffffffffff811115610756576107566105f1565b61078760207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610620565b81815284602083860101111561079c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156107d157600080fd5b853567ffffffffffffffff808211156107e957600080fd5b818801915088601f8301126107fd57600080fd5b8135602061080d6106dd8361066f565b82815260059290921b8401810191818101908c84111561082c57600080fd5b948201945b838610156108515761084286610693565b82529482019490820190610831565b9950508901359250508082111561086757600080fd5b61087389838a016106bc565b9550604088013591508082111561088957600080fd5b61089589838a016106bc565b94506108a360608901610693565b935060808801359150808211156108b957600080fd5b506108c68882890161072b565b9150509295509295909350565b6000602082840312156108e557600080fd5b5035919050565b60008151808452602080850194506020840160005b8381101561091d57815187529582019590820190600101610901565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561097757815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610945565b505050838103602085015261098c81876108ec565b91505082810360408401526109a181856108ec565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156109ec57600080fd5b5051919050565b80820180821115610a2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b600060208284031215610a4557600080fd5b81516105ea816105bc56fea2646970667358221220f8c581a90ddd15a9c575004f2aa70522e787a2592d08e7a25827b129edfa6c4464736f6c63430008180033";

type MockFlashLoanReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockFlashLoanReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockFlashLoanReceiver__factory extends ContractFactory {
  constructor(...args: MockFlashLoanReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    provider: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override deploy(
    provider: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(provider, overrides || {}) as Promise<
      MockFlashLoanReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockFlashLoanReceiver__factory {
    return super.connect(runner) as MockFlashLoanReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFlashLoanReceiverInterface {
    return new Interface(_abi) as MockFlashLoanReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockFlashLoanReceiver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockFlashLoanReceiver;
  }
}
