/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MockInitializableImpleV2,
  MockInitializableImpleV2Interface,
} from "../../../../../core-v3/mocks/upgradeability/MockInitializableImplementation.sol/MockInitializableImpleV2";

const _abi = [
  {
    inputs: [],
    name: "REVISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "txt",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "vals",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "setValueViaProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "text",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "values",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b506107a7806100246000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635dd216101161005b5780635dd21610146100b75780635e383d21146100cc578063d31f8b6b146100df578063dde43cba146100f257600080fd5b80631f1bd692146100825780633fa4f245146100a057806355241077146100b7575b600080fd5b61008a6100fa565b6040516100979190610351565b60405180910390f35b6100a960345481565b604051908152602001610097565b6100ca6100c53660046103be565b603455565b005b6100a96100da3660046103be565b610188565b6100ca6100ed3660046104d5565b6101a9565b6100a9600281565b60358054610107906105b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610133906105b3565b80156101805780601f1061015557610100808354040283529160200191610180565b820191906000526020600020905b81548152906001019060200180831161016357829003601f168201915b505050505081565b6036818154811061019857600080fd5b600091825260209091200154905081565b60015460029060ff16806101bc5750303b155b806101c8575060005481115b610258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a6564000000000000000000000000000000000000606482015260840160405180910390fd5b60015460ff1615801561029557600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168117905560008290555b603485905560356102a68582610657565b5082516102ba9060369060208601906102f1565b5080156102ea57600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690555b5050505050565b82805482825590600052602060002090810192821561032c579160200282015b8281111561032c578251825591602001919060010190610311565b5061033892915061033c565b5090565b5b80821115610338576000815560010161033d565b60006020808352835180602085015260005b8181101561037f57858101830151858201604001528201610363565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b6000602082840312156103d057600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561044d5761044d6103d7565b604052919050565b600082601f83011261046657600080fd5b8135602067ffffffffffffffff821115610482576104826103d7565b8160051b610491828201610406565b92835284810182019282810190878511156104ab57600080fd5b83870192505b848310156104ca578235825291830191908301906104b1565b979650505050505050565b6000806000606084860312156104ea57600080fd5b8335925060208085013567ffffffffffffffff8082111561050a57600080fd5b818701915087601f83011261051e57600080fd5b813581811115610530576105306103d7565b610560847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610406565b818152898583860101111561057457600080fd5b81858501868301376000918101909401529193506040860135918083111561059b57600080fd5b50506105a986828701610455565b9150509250925092565b600181811c908216806105c757607f821691505b602082108103610600577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610652576000816000526020600020601f850160051c8101602086101561062f5750805b601f850160051c820191505b8181101561064e5782815560010161063b565b5050505b505050565b815167ffffffffffffffff811115610671576106716103d7565b6106858161067f84546105b3565b84610606565b602080601f8311600181146106d857600084156106a25750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b17855561064e565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561072557888601518255948401946001909101908401610706565b508582101561076157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212205daa1423c157eb3a28ed15620b7ae6cdddb65d29b2b6613d723d0790d4e1d51264736f6c63430008180033";

type MockInitializableImpleV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockInitializableImpleV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockInitializableImpleV2__factory extends ContractFactory {
  constructor(...args: MockInitializableImpleV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockInitializableImpleV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockInitializableImpleV2__factory {
    return super.connect(runner) as MockInitializableImpleV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockInitializableImpleV2Interface {
    return new Interface(_abi) as MockInitializableImpleV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockInitializableImpleV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockInitializableImpleV2;
  }
}
